name: 'Publishing Azure Machine Learning componets'
description: 'Publishes Azure Machine Learning  components'
inputs:
  component-spec:
    description: 'Component specification file. This parameters supports willcards'
    required: true
  resource-group:
    description: The resource group
    required: true
  workspace:
    description: Azure ML workspace
    required: true
runs:
  using: "composite"
  steps:
    - id: install-dependecies
      shell: bash
      run: |
        echo "::debug::Installing Azure CLI"
        if [ -x "$(command -v az)" ]; then
          echo "::debug::Azure CLI is already installed"
        else
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        fi

        echo "::debug::Installing azure-cli-ml extension with components support"
        if [[ $(az extension show --name azure-cli-ml) ]]; then
          echo "::debug::azure-cli-ml extension is already installed."
        else
          az extension add --source https://azuremlsdktestpypi.blob.core.windows.net/wheels/componentsdk/azure_cli_ml-0.9.1-py3-none-any.whl --pip-extra-index-urls https://azuremlsdktestpypi.azureedge.net/componentsdk/0.9.1 --yes --verbose
        fi

        echo "::debug::Installing yq"
        pip install yq==2.12.2

    - id: publish
      shell: bash
      run: |
        INSTALLED=$(az ml component list | jq .[].name)

        COMP_FILES=$(find ${{ inputs.component-spec }} -exec realpath --relative-to=${{ github.workspace }} {} \;)

        for COMP in $COMP_FILES
        do
          COMPONENT_NAME=$(yq -r .name $COMP)
          COMPONENT_VERSION=$(yq -r .version $COMP)
          COMPONENT_URL=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/blob/${GITHUB_REF##*/}/$COMP

          echo "::debug::Verifying component installation for $COMPONENT_NAME @ $COMPONENT_VERSION"
          COMPONENT_INSTALLED=$(az ml component list -g ${{ inputs.resource-group }} -w ${{ inputs.workspace }} | jq -r --arg COMPONENT_NAME $COMPONENT_NAME '.[].name | select(contains($COMPONENT_NAME))')

          echo "::debug::Installing component $COMPONENT_NAME @ $COMPONENT_VERSION"
          if [[ "$COMPONENT_INSTALLED" == "$COMPONENT_NAME" ]];
          then
            az ml component create --file $COMP -g ${{ inputs.resource-group }} -w ${{ inputs.workspace }}

            echo "::debug::Updating default version for component $COMPONENT_NAME to $COMPONENT_VERSION"
            az ml component update --name "$COMPONENT_NAME" --version $COMPONENT_VERSION --label default -g ${{ inputs.resource-group }} -w ${{ inputs.workspace }}
          else
            az ml component create --file $COMP -g ${{ inputs.resource-group }} -w ${{ inputs.workspace }}
          fi
        done